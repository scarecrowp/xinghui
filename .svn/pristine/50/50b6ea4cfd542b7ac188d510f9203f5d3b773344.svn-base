//
//  JLBaiduMapLocationHelper.m
//  QiaoGu
//
//  Created by JackLiu on 14-9-11.
//  Copyright (c) 2014年 ZXInsight. All rights reserved.
//

#import "JLBaiduMapLocationHelper.h"
#import "BMapKit.h"

@interface JLBaiduMapLocationHelper ()<BMKLocationServiceDelegate,BMKGeoCodeSearchDelegate>
{
    BMKLocationService* _locService;
    BMKGeoCodeSearch* _geocodesearch;
}

@end

@implementation JLBaiduMapLocationHelper

@synthesize delegate = _delegate;

- (id)init
{
    self = [super init];
    if (self)
    {
    }
    return self;
}

- (void)startLacation
{
    if (!_locService)
    {
        _locService = [[BMKLocationService alloc]init];
        _locService.delegate = self;
        
        _geocodesearch = [[BMKGeoCodeSearch alloc]init];
        _geocodesearch.delegate = self;
    }

    [_locService startUserLocationService];
}

- (void)stop
{
    [_locService stopUserLocationService];
    _locService.delegate = nil;
    _locService = nil;
    
    _geocodesearch.delegate = nil;
    _geocodesearch = nil;
}

- (void)reverseGeocode:(CLLocationCoordinate2D)coordinate
{
    BMKReverseGeoCodeOption *reverseGeocodeSearchOption = [[BMKReverseGeoCodeOption alloc]init];
    reverseGeocodeSearchOption.reverseGeoPoint = coordinate;
    BOOL flag = [_geocodesearch reverseGeoCode:reverseGeocodeSearchOption];
    
    if(flag)
    {
        NSLog(@"反geo检索发送成功");
    }
    else
    {
        NSLog(@"反geo检索发送失败");
        
        [self stop];
        
        NSError *error = [[NSError alloc]initWithDomain:@"反geo检索发送失败" code:1001 userInfo:@{@"ErrorMessage":@"反geo检索发送失败"}];
        
        [_delegate updateLocationFailWithError:error];
    }
}

#pragma mark - BMKLocationServiceDelegate

/**
 *用户方向更新后，会调用此函数
 *@param userLocation 新的用户位置
 */
- (void)didUpdateUserHeading:(BMKUserLocation *)userLocation
{
    NSLog(@"heading is %@",userLocation.heading);
}

/**
 *用户位置更新后，会调用此函数
 *@param userLocation 新的用户位置
 */
- (void)didUpdateUserLocation:(BMKUserLocation *)userLocation
{
    NSLog(@"didUpdateUserLocation lat %f,long %f",userLocation.location.coordinate.latitude,userLocation.location.coordinate.longitude);
    
    NSLog(@"latitude == %f ,  longitude == %f",userLocation.location.coordinate.latitude,userLocation.location.coordinate.longitude);
    
    if (userLocation.location)
    {
        [self reverseGeocode:userLocation.location.coordinate];
        
        [_locService stopUserLocationService];
    }
}

/**
 *定位失败后，会调用此函数
 *@param error 错误号
 */
- (void)didFailToLocateUserWithError:(NSError *)error
{
    [_delegate updateLocationFailWithError:error];
    [self stop];
}

#pragma mark - 

#pragma mark - BMKGeoCodeSearchDelegate

/**
 *返回地址信息搜索结果
 *@param searcher 搜索对象
 *@param result 搜索结BMKGeoCodeSearch果
 *@param error 错误号，@see BMKSearchErrorCode
 */
- (void)onGetGeoCodeResult:(BMKGeoCodeSearch *)searcher result:(BMKGeoCodeResult *)result errorCode:(BMKSearchErrorCode)error
{
    
    [self stop];
}

/**
 *返回反地理编码搜索结果
 *@param searcher 搜索对象
 *@param result 搜索结果
 *@param error 错误号，@see BMKSearchErrorCode
 */
- (void)onGetReverseGeoCodeResult:(BMKGeoCodeSearch *)searcher result:(BMKReverseGeoCodeResult *)result errorCode:(BMKSearchErrorCode)error
{
    NSMutableDictionary *addressDictionary = [NSMutableDictionary new];

    [addressDictionary setObject:[NSString stringWithFormat:@"%f",result.location.latitude] forKey:@"latitude"];
    [addressDictionary setObject:[NSString stringWithFormat:@"%f",result.location.longitude] forKey:@"longitude"];
    
    NSString *city = result.addressDetail.city;
    city = [city substringToIndex:city.length-1];
    [addressDictionary setObject:city forKey:@"city"];

    [addressDictionary setObject:result.addressDetail.streetNumber forKey:@"streetNumber"];
    [addressDictionary setObject:result.addressDetail.streetName forKey:@"streetName"];
    [addressDictionary setObject:result.addressDetail.district forKey:@"district"];
    [addressDictionary setObject:result.addressDetail.province forKey:@"province"];

    [addressDictionary setObject:[NSString stringWithFormat:@"%@%@",result.addressDetail.streetName,result.addressDetail.streetNumber] forKey:@"detail"];

    
    [_delegate didUpdateToLocation:addressDictionary];
    
    [self stop];
}

#pragma mark -

+ (CLLocationCoordinate2D )convertBaiduCoorFromGPS:(CLLocationCoordinate2D)gpsCoordinate
{
    //转换GPS坐标至百度坐标
    NSDictionary *baiduDic = BMKConvertBaiduCoorFrom(gpsCoordinate,BMK_COORDTYPE_GPS);
    CLLocationCoordinate2D baiduCoordinate = BMKCoorDictionaryDecode(baiduDic);
    return baiduCoordinate;
}

@end
